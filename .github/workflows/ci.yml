name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AZURE_ACR_NAME: chatbotiacr
  AZURE_RESOURCE_GROUP: chatbot-ia-rg
  BACKEND_APP_NAME: be-chatbot-app
  FRONTEND_APP_NAME: fe-chatbot-app
  BACKEND_DIR: BE-boot
  FRONTEND_DIR: fe-chatbot

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # --- Lógica de CI para el Backend ---
      - name: Set up Python for Backend
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install backend dependencies
        working-directory: ${{ env.BACKEND_DIR }}
        run: pip install -r requirements.txt

      - name: Run backend tests
        working-directory: ${{ env.BACKEND_DIR }}
        run: |
          echo "Ejecutando tests del backend..."
          # pytest .
      
      # --- Lógica de CI para el Frontend ---
      - name: Set up Node.js for Frontend
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install frontend dependencies
        working-directory: ${{ env.FRONTEND_DIR }}
        run: npm install

      - name: Build frontend
        working-directory: ${{ env.FRONTEND_DIR }}
        run: npm run build

      - name: Run frontend tests
        working-directory: ${{ env.FRONTEND_DIR }}
        run: |
          echo "Ejecutando tests del frontend..."
          # npm test

  deploy:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Autenticación en Azure y ACR
      - name: 'Azure Login'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: 'Docker Login to ACR'
        run: az acr login --name ${{ env.AZURE_ACR_NAME }}
      
      # Construcción y push de la imagen del Backend
      - name: 'Build and push Backend image'
        run: |
          docker build -f devops/Dockerfile.backend -t ${{ env.AZURE_ACR_NAME }}.azurecr.io/${{ env.BACKEND_APP_NAME }}:latest .
          docker push ${{ env.AZURE_ACR_NAME }}.azurecr.io/${{ env.BACKEND_APP_NAME }}:latest

      # Construcción y push de la imagen del Frontend
      - name: 'Build and push Frontend image'
        run: |
          docker build -f devops/Dockerfile.frontend -t ${{ env.AZURE_ACR_NAME }}.azurecr.io/${{ env.FRONTEND_APP_NAME }}:latest .
          docker push ${{ env.AZURE_ACR_NAME }}.azurecr.io/${{ env.FRONTEND_APP_NAME }}:latest
    
      # Despliegue del Backend en Azure Container Apps
      - name: 'Deploy Backend to Azure Container Apps'
        uses: azure/container-apps-deploy-action@v1
        with:
          container_apps_name: ${{ env.BACKEND_APP_NAME }}
          resource_group: ${{ env.AZURE_RESOURCE_GROUP }}
          image_name: ${{ env.AZURE_ACR_NAME }}.azurecr.io/${{ env.BACKEND_APP_NAME }}:latest
          # Aquí puedes añadir variables de entorno, por ejemplo:
          # environment_variables: 'API_KEY=${{ secrets.API_KEY }}'

      # Despliegue del Frontend en Azure Container Apps
      - name: 'Deploy Frontend to Azure Container Apps'
        uses: azure/container-apps-deploy-action@v1
        with:
          container_apps_name: ${{ env.FRONTEND_APP_NAME }}
          resource_group: ${{ env.AZURE_RESOURCE_GROUP }}
          image_name: ${{ env.AZURE_ACR_NAME }}.azurecr.io/${{ env.FRONTEND_APP_NAME }}:latest